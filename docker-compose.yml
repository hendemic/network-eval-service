# Docker Compose configuration for Network Evaluation Service

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-netmon}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-netmon}
      - POSTGRES_DB=${POSTGRES_DB:-network_tests}
      - PGDATABASE=${POSTGRES_DB:-network_tests}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-netmon} -d ${POSTGRES_DB:-network_tests}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "${WEB_PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-netmon}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-netmon}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      # Make sure this matches the database name created by the db service
      - POSTGRES_DB=${POSTGRES_DB:-network_tests}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA:-network_eval}
      - PGDATABASE=${POSTGRES_DB:-network_tests}
      - FLASK_CONFIG=production
      - SECRET_KEY=${SECRET_KEY:-change_this_in_production}
    restart: unless-stopped

  # Database initialization service - runs once to set up tables
  db-init:
    build:
      context: .
      dockerfile: Dockerfile.web
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-netmon}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-netmon}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-network_tests}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA:-network_eval}
      - PGDATABASE=${POSTGRES_DB:-network_tests}
    volumes:
      - ./docker:/app/docker
    # Using a simple shell script for initialization
    command: ["bash", "/app/docker/db_init.sh"]
    restart: "no"

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      db:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-netmon}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-netmon}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-network_tests}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA:-network_eval}
      - PGDATABASE=${POSTGRES_DB:-network_tests}
      - TEST_TARGET=${TEST_TARGET:-1.1.1.1}
      - TEST_COUNT=${TEST_COUNT:-100}
      - TEST_INTERVAL=${TEST_INTERVAL:-0.1}
      - TEST_INTERVAL_SECONDS=${TEST_INTERVAL_SECONDS:-60}
    restart: unless-stopped

volumes:
  postgres_data: